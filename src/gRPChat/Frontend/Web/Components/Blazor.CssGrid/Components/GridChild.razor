<div @attributes="InputAttributes">
    @ChildContent
</div>

@code {

    #region Public Properties

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public string Width { get; set; } = "100%";

    [Parameter]
    public string Height { get; set; } = "100%";

    [Parameter]
    public int Row { get; set; }

    [Parameter]
    public int Column { get; set; }

    [Parameter]
    public int RowSpan { get; set; }

    [Parameter]
    public int ColumnSpan { get; set; }

    [Parameter]
    public VerticalAlignment VerticalAlignment  { get; set; }

    [Parameter]
    public HorizontalAlignment HorizontalAlignment { get; set; } 

    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object> InputAttributes { get; set; }

    #endregion

    #region Protected Methods

    protected override async Task OnParametersSetAsync()
    {
        var style = "";

        if (InputAttributes != null)
        {
            if (InputAttributes.ContainsKey("style"))
                style = (string)InputAttributes["style"];
        }
        else
            InputAttributes = new Dictionary<string, object>();

        if (!style.EndsWith(";"))
            style += ";";

        GridChildGenerator.GenerateStyle(ref style, Height, Width, Row, Column, RowSpan, ColumnSpan, VerticalAlignment, HorizontalAlignment);

        if (InputAttributes.ContainsKey("style"))
            InputAttributes["style"] = style;
        else
            InputAttributes.Add("style", style);
    }

    #endregion
}
