@using System.Security.Claims;
@inherits LayoutComponentBase

@inject NavigationManager _navigationManager
@inject IStringLocalizer<MainLayout> _loc
@inject AuthenticationStateProvider _authenticationStateProvider

<AuthorizeView>
    <Grid RowDefinitions="* auto *"
          ColumnDefinitions="* auto *"
          Width="100vw"
          Height="100vh"
          style="background: gray">

        <GridChild Row="1"
                   Column="1">
            <CultureSelector />
        </GridChild>

        <GridChild Row="1"
                   Column="2">
            <div>
                @_loc["Hello"] @_user?.Identity?.Name
            </div>
        </GridChild>

        <GridChild Row="1"
                   Column="3">
            <RadzenButton Text="@_loc["Logout"]"
                           Click="OnLogout"/>
        </GridChild>

        <GridChild Row="2"
                   Column="2">
            @Body
        </GridChild>
    </Grid>
</AuthorizeView>

@code{
    private ClaimsPrincipal? _user;

    [CascadingParameter]
    private Task<AuthenticationState>? AuthenticationState { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (AuthenticationState != null)
        {
            var state = await AuthenticationState;

            _user = state.User;

            if (_user.Identity is { IsAuthenticated: false})
            {
                _navigationManager.NavigateTo("login");
            }
        }      
    }

    private async Task OnLogout()
    {
        _navigationManager.NavigateTo("login");
        await ((IdentityAuthenticationStateProvider) _authenticationStateProvider).MarkLogouted();
    }
}
