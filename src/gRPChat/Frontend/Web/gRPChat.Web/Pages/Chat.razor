@page "/"
@using Grpc.Core;
@using gRPChat.Protos;

@inject ChatRoom.ChatRoomClient ChatRoomClient

<div style="height: 80vh; width: 50vw;">

    <div style="display: grid; grid-template-rows: 1fr auto; height: 100%">

        <div style="grid-row: 1; overflow-y: auto; align-self: end; max-height: 100%">
            <ChatMessagesView Messages="_messages" />
        </div>
        
        <div style ="grid-row: 2">
            <RadzenTextArea Placeholder="Enter here..." 
                            @bind-Value="_message" 
                            class="w-100" />
            <RadzenButton Click = "SendMessageAsync" Text="Send" ButtonStyle="ButtonStyle.Primary" />
        </div>

    </div> 

</div>


@code
{
    private List<string> _messages = new List<string>();

    private string _message;

    protected override async Task OnInitializedAsync()
    {
        using var serverStream = ChatRoomClient.JoinChat(new ChatRequest());
        var stream = serverStream.ResponseStream;

        await foreach (var message in stream.ReadAllAsync())
        {
            _messages.Add(message.Message);
            this.StateHasChanged();
        }    
    }

    private async Task SendMessageAsync()
    {
        if (string.IsNullOrEmpty(_message))
            return;

        await ChatRoomClient.SendAsync(new ChatMessage
        {
            Message = _message
        });
    }
}
