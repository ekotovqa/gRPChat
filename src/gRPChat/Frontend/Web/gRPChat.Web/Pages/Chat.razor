@page "/"
@using Grpc.Core;
@using gRPChat.Protos;

@inject ChatRoom.ChatRoomClient ChatRoomClient
@inject IStringLocalizer<Chat> ChatLoc

<div style="height: 80vh; width: 50vw;">

    <Grid RowDefinitions="* auto">

        <GridChild Row="1"
                   VerticalAlignment="VerticalAlignment.Bottom" 
                   style="overflow-y: auto; max-height: 100%">
            <ChatMessagesView Messages="_messages" />
        </GridChild>

        <GridChild Row="2">
            <RadzenTextArea Placeholder="@ChatLoc["TextAreaPlaceHolder"]"
                            @bind-Value="_message" 
                            class="w-100" />
            <RadzenButton Click="SendMessageAsync" Text="@ChatLoc["SendButtonText"]" ButtonStyle="ButtonStyle.Primary" />
        </GridChild>

    </Grid> 

</div>


@code
{
    private List<string> _messages = new List<string>();

    private string _message;

    protected override async Task OnInitializedAsync()
    {
        using var serverStream = ChatRoomClient.JoinChat(new ChatRequest());
        var stream = serverStream.ResponseStream;

        await foreach (var message in stream.ReadAllAsync())
        {
            _messages.Add(message.Message);
            this.StateHasChanged();
        }    
    }

    private async Task SendMessageAsync()
    {
        if (string.IsNullOrEmpty(_message))
            return;

        await ChatRoomClient.SendAsync(new ChatMessage
        {
            Message = _message
        });

        _message = "";
    }
}
